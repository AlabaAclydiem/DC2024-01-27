openapi: "3.0.3"
info:
  title: "com_danilovfa_dc_danilov API"
  description: "com_danilovfa_dc_danilov API"
  version: "1.0.0"
servers:
- url: "localhost:24110"
paths:
  /api/v1.0/posts:
    get:
      description: "Get all posts"
      responses:
        "200":
          description: ""
          content:
            'application/json':
              schema:
                items:
                  $ref: "#/components/schemas/PostResponseTo"
    post:
      description: "Create new post"
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/PostCreateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
                Example#3:
                  value: ""
                Example#4:
                  value: ""
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PostResponseTo"
    put:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/PostUpdateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/posts/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/stickers:
    get:
      description: ""
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/StickerCreateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
                Example#3:
                  value: ""
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StickerResponseTo"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/StickerUpdateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/stickers/{id}:
    delete:
      description: "Delete sticker by Id"
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/storys:
    get:
      description: ""
      responses:
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/StoryCreateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
                Example#3:
                  value: ""
                Example#4:
                  value: ""
                Example#5:
                  value: ""
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/StoryResponseTo"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/StoryUpdateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/storys/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/users:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/UserResponseTo"
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserCreateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
                Example#3:
                  value: ""
                Example#4:
                  value: ""
        "201":
          description: "Created"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserResponseTo"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/UserUpdateRequestTo"
        required: true
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /api/v1.0/users/{id}:
    delete:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "204":
          description: "No Content"
          content:
            '*/*':
              schema:
                type: "object"
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      description: ""
      parameters:
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "number"
      responses:
        "500":
          description: "Internal Server Error"
          content:
            text/plain:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
                Example#2:
                  value: ""
        "200":
          description: ""
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    PostResponseTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        storyId:
          type: "integer"
          format: "int64"
        content:
          type: "string"
      required:
      - "content"
    ErrorResponse:
      type: "object"
      properties:
        errorCode:
          type: "integer"
          format: "int32"
        errorMessage:
          type: "string"
      required:
      - "errorMessage"
    PostCreateRequestTo:
      type: "object"
      properties:
        storyId:
          type: "integer"
          format: "int64"
        content:
          type: "string"
      required:
      - "content"
    PostUpdateRequestTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        storyId:
          type: "integer"
          format: "int64"
        content:
          type: "string"
      required:
      - "content"
    StickerResponseTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
      required:
      - "name"
    StickerCreateRequestTo:
      type: "object"
      properties:
        name:
          type: "string"
      required:
      - "name"
    StickerUpdateRequestTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
      required:
      - "name"
    StoryResponseTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        userId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        content:
          type: "string"
        created:
          type: "integer"
          format: "int64"
        modified:
          type: "integer"
          format: "int64"
      required:
      - "title"
      - "content"
    StoryCreateRequestTo:
      type: "object"
      properties:
        userId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        content:
          type: "string"
      required:
      - "title"
      - "content"
    StoryUpdateRequestTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        userId:
          type: "integer"
          format: "int64"
        title:
          type: "string"
        content:
          type: "string"
      required:
      - "title"
      - "content"
    UserResponseTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
      required:
      - "login"
      - "password"
      - "firstName"
      - "lastName"
    UserCreateRequestTo:
      type: "object"
      properties:
        login:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
      required:
      - "login"
      - "password"
      - "firstName"
      - "lastName"
    UserUpdateRequestTo:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        login:
          type: "string"
        password:
          type: "string"
        firstName:
          type: "string"
        lastName:
          type: "string"
      required:
      - "login"
      - "password"
      - "firstName"
      - "lastName"